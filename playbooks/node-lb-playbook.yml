---
- hosts: all
  become: true

  handlers:
  - name: containerd status
    service: name=containerd state=restarted

  - name: Restart SSH
    service:
      name: sshd
      state: restarted

  - name: Restart haproxy
    service:
      name: haproxy
      state: restarted

  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: true
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - net-tools
      - sshpass
      - chrony
      - haproxy
        #- virtualbox-guest-utils
        #- virtualbox-guest-dkms

  - name: Upgrade the OS (apt-get dist-upgrade)
    apt:
      upgrade: dist

  - name: Load netfilter kernel module
    modprobe:
      name: "{{ item }}"
      state: present
    with_items:
      - overlay
      - br_netfilter

  - name: Set sysctl
    sysctl:
      name: "{{ item }}"
      value: '1'
      sysctl_set: true
      state: present
      #reload: yes
    with_items:
      - net.ipv4.ip_forward
      - net.bridge.bridge-nf-call-iptables
      - net.bridge.bridge-nf-call-ip6tables

  - name: Enable Chrony
    service:
      name: chrony
      state: started
      enabled: true

  - name: Enable haproxy
    service:
      name: haproxy
      state: started
      enabled: true

  - name: Set timezone to America/Denver
    timezone:
      name: America/Denver

  - name: Add /etc/host entries
    lineinfile:
      path: /etc/hosts
      line: "{{ item }}"
      state: present
    with_items:
      - '10.0.1.131 controller-01 kube-master'
      - '10.0.1.132 controller-02'
      - '10.0.1.133 controller-03'
      - '10.0.1.134 worker-01'
      - '10.0.1.135 worker-02'
      - '10.0.1.136 worker-03'
      - '10.0.1.137 worker-04'
      - '10.0.1.130 kubelb-01'
      - '192.168.60.131 controller-01-priv'
      - '192.168.60.132 controller-02-priv'
      - '192.168.60.133 controller-03-priv'
      - '192.168.60.134 worker-01-priv'
      - '192.168.60.135 worker-02-priv'
      - '192.168.60.136 worker-03-priv'
      - '192.168.60.137 worker-04-priv'
      - '192.168.60.130 kubelb-01-priv'

  - name: Create /etc/kubernetes/pki directory.
    file:
      path: /etc/kubernetes/pki
      state: directory
      owner: root
      group: root
      mode: 0755

  - name: Copy ca.pem to /etc/kubernetes/pki
    copy:
      src: /home/feathrex/Documents/Udemy/kubernetes-multiha/files/ca.pem
      dest: /etc/kubernetes/pki

#  - name: Fetch /etc/kubernetes/pki/ca.pem from controller-01
#   fetch:
#     src: /etc/kubernetes/pki/ca.crt
#     dest: /etc/kubernetes/pki/ca.pem
#     dest: /tmp/fetched_file
#     flat: true
#   delegate_to: controller-01

  - name: Copy haproxy.cfg file from /vagrant
    copy:
      src: /vagrant/files/haproxy.cfg
      dest: /etc/haproxy/haproxy.cfg
      remote_src: true
      owner: root
      group: root
      mode: 0755
    notify:
      - Restart haproxy

  - name: Allow ssh to host
    lineinfile:
      path: /etc/ssh/sshd_config
      regex: '^PasswordAuthentication'
      line: 'PasswordAuthentication yes'
    notify:
      - Restart SSH

  - name: Add set -o vi to my .bashrc
    become: false
    lineinfile:
      dest: ~/.bashrc
      regexp: '^set -o vi'
      line: set -o vi

  - name: Set vim as my default editor
    become: false
    lineinfile:
      dest: ~/.bashrc
      line: export EDITOR=vim
      insertbefore: 'set -o vi'
