---
- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for containerd from docker.com
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
    state: present
    filename: docker

- name: Install Common Software Packages VIA Role
  apt:
    name: "{{ os_packages_all }}"
    state: present
  with_items: "{{ os_packages_all }}"

- name: Upgrade the OS (apt-get dist-upgrade)
  apt:
    upgrade: dist

- name: Install K8S Software Packages VIA Role
  apt:
    name: "{{ controlplane_packages }}"
    state: present
  with_items: "{{ controlplane_packages }}"

- name: Load netfilter kernel module
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter

- name: Create /etc/containerd
  file:
    path: /etc/containerd
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Update /etc/containerd/config.toml
  shell: containerd config default | sudo tee /etc/containerd/config.toml

- name: Create /etc/crictl.yaml
  copy:
    dest: /etc/crictl.yaml
    owner: root
    group: root
    mode: 0644
    content: |
      runtime-endpoint: unix:///run/containerd/containerd.sock
      image-endpoint: unix:///run/containerd/containerd.sock
      timeout: 2
      debug: false
      pull-image-on-create: true

- name: Update /etc/containerd/config.toml
  lineinfile:
    path: /etc/containerd/config.toml
    regex: 'SystemdCgroup'
    line: 'SystemdCgroup = true'
  notify:
    - Restart containerd

- name: Set sysctl
  sysctl:
    name: "{{ item }}"
    value: '1'
    sysctl_set: true
    state: present
    reload: yes
  with_items:
    - net.ipv4.ip_forward
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables
  notify:
    - Restart containerd

- name: Enable Chrony
  service:
    name: chrony
    state: started
    enabled: true

- name: Disable multipathd service
  service:
    name: multipathd
    state: stopped
    enabled: false

- name: Set timezone to America/Denver
  timezone:
    name: America/Denver

- name: Allow ssh to host
  lineinfile:
    path: /etc/ssh/sshd_config
    regex: '^PasswordAuthentication'
    line: 'PasswordAuthentication yes'
  notify:
    - Restart SSH

- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Update /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^127.0.2.1 controller-01 controller-01'
    line: '#127.0.2.1 controller-01 controller-01'

#- name: Add Entries To /etc/hosts
# blockinfile:
#   path: /etc/hosts
#   block: {{lookup('file', 'hosts')}}
#   create: true
#   state: present

- name: Add /etc/host entries
  lineinfile:
    path: /etc/hosts
    line: "{{ item }}"
    state: present
  with_items:
    - '10.0.1.131 controller-01 kube-master'
    - '10.0.1.132 controller-02'
    - '10.0.1.133 controller-03'
    - '10.0.1.134 worker-01'
    - '10.0.1.135 worker-02'
    - '10.0.1.136 worker-03'
    - '10.0.1.137 worker-04'
    - '10.0.1.130 kubelb-01'
    - '192.168.60.131 controller-01-priv'
    - '192.168.60.132 controller-02-priv'
    - '192.168.60.133 controller-03-priv'
    - '192.168.60.134 worker-01-priv'
    - '192.168.60.135 worker-02-priv'
    - '192.168.60.136 worker-03-priv'
    - '192.168.60.137 worker-04-priv'
    - '192.168.60.130 kubelb-01-priv'

- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
    create: yes
  notify:
    - Restart containerd
    - Restart kubelet

- name: Flush Handlers
  meta: flush_handlers

- name: Add set -o vi to my .bashrc
  become: false
  lineinfile:
    dest: ~/.bashrc
    regexp: '^set -o vi'
    line: set -o vi

- name: Set vim as my default editor
  become: false
  lineinfile:
    dest: ~/.bashrc
    line: export EDITOR=vim
    insertbefore: 'set -o vi'

- name: Create /home/vagrant/.vimrc with content
  lineinfile:
    path: /home/vagrant/.vimrc
    line: set tabstop=2 shiftwidth=2 softtabstop=2 smarttab expandtab
    create: yes

- name: Add vagrant user to root group
  user:
    name: vagrant
    groups: root
    append: true

- name: Create /home/vagrant/.ssh/config with strict host checking
  lineinfile:
    path: /home/vagrant/.ssh/config
    line: StrictHostKeyChecking=no
    create: yes
