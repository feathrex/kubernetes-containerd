---
- name: Add apt signing keys for docker and K8S
  apt_key:
    url: "{{ item }}"
    state: present
  with_items:
    - "{{ apt_keys }}"

- name: Add Package Repositories
  apt_repository:
    repo: "{{ item.repo }}"
    filename: "{{ item.filename }}"
    state: present
  with_items:
    - "{{ apt_repos }}"

- name: Install Common Software Packages VIA Role
  apt:
    name: "{{ os_packages_all }}"
    state: present
  with_items: "{{ os_packages_all }}"

#- name: Upgrade the OS (apt-get dist-upgrade)
# apt:
#   upgrade: dist

- name: Install K8S Software Packages VIA Role
  apt:
    name: "{{ kubernetes_packages }}"
    state: present
  with_items:
    - "{{ kubernetes_packages }}"

- name: Load netfilter kernel module
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ kernel_modules }}"

- name: Update /etc/containerd/config.toml
  shell: containerd config default | sudo tee /etc/containerd/config.toml

- name: Create /etc/crictl.yaml
  copy:
    dest: /etc/crictl.yaml
    owner: root
    group: root
    mode: 0644
    content: |
      runtime-endpoint: unix:///run/containerd/containerd.sock
      image-endpoint: unix:///run/containerd/containerd.sock
      timeout: 2
      debug: false
      pull-image-on-create: true

- name: Update /etc/containerd/config.toml
  lineinfile:
    path: /etc/containerd/config.toml
    regex: 'SystemdCgroup'
    line: 'SystemdCgroup = true'
  notify:
    - Restart containerd

- name: Set sysctl
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  with_items:
    - "{{ sysctl_settings }}"

- name: Enable Chrony
  service:
    name: chrony
    state: started
    enabled: true

- name: Set timezone to America/Denver
  timezone:
    name: America/Denver

- name: Allow ssh to host
  lineinfile:
    path: /etc/ssh/sshd_config
    regex: '^PasswordAuthentication'
    line: 'PasswordAuthentication yes'
  notify:
    - Restart SSH

- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable multipathd service
  service:
    name: multipathd
    state: stopped
    enabled: false

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Add /etc/host entries
  lineinfile:
    path: /etc/hosts
    line: "{{ item }}"
    state: present
  with_items:
    - "{{ host_entries }}"
  tags: etc-hosts

- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
    create: yes
  notify:
    - Restart containerd
    - Restart kubelet

- name: Flush Handlers
  meta: flush_handlers

- name: Add set -o vi to my .bashrc
  become: false
  lineinfile:
    dest: ~/.bashrc
    regexp: '^set -o vi'
    line: set -o vi

- name: Set vim as my default editor
  become: false
  lineinfile:
    dest: ~/.bashrc
    line: export EDITOR=vim
    insertbefore: 'set -o vi'

- name: Create /home/vagrant/.vimrc with content
  lineinfile:
    path: /home/vagrant/.vimrc
    line: set tabstop=2 shiftwidth=2 softtabstop=2 smarttab expandtab
    create: yes

- name: Add vagrant user to root group
  user:
    name: vagrant
    groups: root
    append: true

- name: Create /home/vagrant/.ssh/config with strict host checking
  lineinfile:
    path: /home/vagrant/.ssh/config
    line: StrictHostKeyChecking=no
    create: yes
