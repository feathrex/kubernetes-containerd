---
- hosts: all
  become: true

  handlers:
  - name: docker status
    service: name=docker state=started

  - name: Restart SSH
    service:
      name: sshd
      state: restarted

  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: true
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - net-tools
      - vim
      - ansible
      - ansible-doc
      - ansible-lint
      - yamllint
      - sshpass
      - chrony
      - etcd-client
      - jq
      - traceroute
      - bridge-utils
      - httping
      - tree
      - sysstat
      - virtualbox-guest-utils
      - virtualbox-guest-dkms

  - name: Upgrade the OS (apt-get dist-upgrade)
    apt:
      upgrade: dist

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Add apt repository for Docker
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Install container runtime docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: true
    vars:
      packages:
        #- docker-ce=5:19.03.14~3-0~ubuntu-focal
        #- docker-ce-cli=5:19.03.14~3-0~ubuntu-focal
        #- containerd.io=1.4.3-1
       - docker-ce=5:20.10.7~3-0~ubuntu-focal
       - docker-ce-cli=5:20.10.7~3-0~ubuntu-focal
       - containerd.io=1.4.6-1

  - name: Load netfilter kernel module
    modprobe:
      name: "{{ item }}"
      state: present
    with_items:
      - overlay
      - br_netfilter

  - name: Set sysctl
    sysctl:
      name: "{{ item }}"
      value: '1'
      sysctl_set: true
      state: present
      #reload: yes
    with_items:
      - net.ipv4.ip_forward
      - net.bridge.bridge-nf-call-iptables
      - net.bridge.bridge-nf-call-ip6tables
    notify:
      - docker status

  - name: Install docker-compose
    get_url:
      url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
      owner: root
      group: root
      mode: '0755'

  - name: Install stern
    get_url:
      url: https://github.com/wercker/stern/releases/download/1.11.0/stern_linux_amd64
      dest: /usr/local/bin/stern
      owner: root
      group: root
      mode: '0755'

  - name: Enable Chrony
    service:
      name: chrony
      state: started
      enabled: true

  - name: Set timezone to America/Denver
    timezone:
      name: America/Denver

  - name: Allow ssh to host
    lineinfile:
      path: /etc/ssh/sshd_config
      regex: '^PasswordAuthentication'
      line: 'PasswordAuthentication yes'
    notify:
      - Restart SSH

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add /etc/host entries
    lineinfile:
      path: /etc/hosts
      line: "{{ item }}"
      state: present
    with_items:
      - '10.0.1.121 controller-01'
      - '10.0.1.122 controller-02'
      - '10.0.1.123 controller-03'
      - '10.0.1.124 worker-01'
      - '10.0.1.125 worker-02'
      - '10.0.1.126 worker-03'
      - '10.0.1.127 worker-04'
      - '10.0.1.119 kubelb-01'
      - '192.168.45.121 controller-01-priv'
      - '192.168.45.122 controller-02-priv'
      - '192.168.45.123 controller-03-priv'
      - '192.168.45.124 worker-01-priv'
      - '192.168.45.125 worker-02-priv'
      - '192.168.45.126 worker-03-priv'
      - '192.168.45.127 worker-04-priv'
      - '192.168.45.119 kubelb-01-priv'

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: true
    vars:
      packages:
        - kubelet=1.20.0-00   # =1.16.15-00
        - kubeadm=1.20.0-00   # =1.16.15-00
        - kubectl=1.20.0-00   # =1.16.15-00
        #- kubelet=1.21.2-00   # =1.16.15-00
        #- kubeadm=1.21.2-00   # =1.16.15-00
        #- kubectl=1.21.2-00   # =1.16.15-00

  - name: Mark Docker and Kubernetes Packages Hold
    dpkg_selections:
      name: "{{ item }}"
      selection: hold
    with_items:
      - kubelet
      - kubeadm
      - kubectl
      - docker-ce
      - docker-ce-cli
      - containerd.io

  - name: Create /etc/default/kubelet file
    file:
      path: /etc/default/kubelet
      state: touch
      mode: '0644'

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      # line: KUBELET_EXTRA_ARGS=--node-ip=10.0.1.110

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: true
      state: restarted

  - name: Disable multipathd Service
    service:
      name: multipathd
      state: stopped
      enabled: false

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="192.168.45.110" \
             --apiserver-cert-extra-sans="192.168.45.110"  --node-name {{ ansible_hostname }} \
             --pod-network-cidr=192.168.0.0/16 --v=5
             #--apiserver-cert-extra-sans="192.168.50.110"  --node-name controller-01 \

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
      - mkdir -p /home/vagrant/.kube
      - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
      - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Add set -o vi to my .bashrc
    become: false
    lineinfile:
      dest: ~/.bashrc
      regexp: '^set -o vi'
      line: set -o vi

  - name: Set vim as my default editor
    become: false
    lineinfile:
      dest: ~/.bashrc
      line: export EDITOR=vim
      insertbefore: 'set -o vi'

  - name: Create /home/vagrant/.ssh/config
    file:
      path: /home/vagrant/.ssh/config
      state: touch
      owner: vagrant
      group: vagrant
      mode: '0600'

  - name: Update ~/.ssh/config strict host checking
    lineinfile:
      path: /home/vagrant/.ssh/config
      line: StrictHostKeyChecking=no

  - name: Setup kubeconfig for vagrant user
    file:
      path: /home/vagrant/.kube
      state: directory
      owner: vagrant
      group: vagrant

  - name: Install calico pod network
    become: false
    shell: kubectl create -f https://docs.projectcalico.org/v3.14/manifests/calico.yaml

  - name: Install Kubernetes Dashboard
    become: false
    shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Create kubectl/bash completion
    shell: kubectl completion bash > /tmp/kubectl

  - name: Move kubectl shell completion file to correct location
    shell: mv /tmp/kubectl /etc/bash_completion.d/kubectl
    become: true

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

    #- name: Remove unnecessary apt repo files
    #file:
    #path: "{{ item }}"
    #state: absent
    #with_items:
    #- /etc/apt/sources.list.d/download_docker_com_linux_ubuntu.list
    #- /etc/apt/sources.list.d/kubernetes.list

        #- name: Copy over VIM stuff
        #copy:
        #src: "{{ item }}"
        #dest: /home/vagrant
        #with_items:
        #- /home/feathrex/.vimrc
        #- /home/feathrex/.vim
