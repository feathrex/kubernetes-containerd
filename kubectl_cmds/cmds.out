kubectl get nodes
kubectl get resourcequotas 
kubectl api-resources 
kubectl get nodes -o wide
kubectl get nodes -o yaml
kubectl get nodes -o json| jq ".items[] | {name:.metadata.name} + .status.capacity"
kubectl describe ingresses.extensions 
kubectl describe networking.k8s.io/v1
kubectl api-resources 
kubectl describe ingressclasses
kubectl describe ingressclasses --namespace kube-system
kubectl describe kube-1
kubectl get nodes
kubectl get all
kubectl describe node k8s-master
kubectl describe node/kube-1
kubectl describe node kube-1
kubectl explain node
kubectl explain node.spec
kubectl explain node.spec.taints
kubectl api-resources 
kubectl api-resources |grep Pod
kubectl explain pods
kubectl explain pods.spec
kubectl explain node.spec.podCIDR
kubectl explain node --recursive 
kubectl get services all
kubectl get services --namespace kube-system 
kubectl get pods --namespace kube-system
kubectl get endpoints
kubectl get endpoints -o wide
kubectl get events
kubectl get events.events.k8s.io 
kubectl get events.k8s.io/v1
kubectl get events.events.k8s.io 
kubectl -n kube-public get configmaps 
kubectl -n kube-public get configmap cluster-info -o yaml
kubectl run pingpong --image alpine ping 1.1.1.1
kubectl get all
kubectl logs pingping
kubectl logs -f pingpong 
kubectl create deployment pingping --image=alpine --replicas=2
kubectl delete deployments.apps pingping 
kubectl run pingpong --image alpine ping 1.1.1.1
kubectl logs --tail 1 pingpong -f
kubectl create cronjob crontest --image=alpine --schedule="*/3 * * * *" --restart=OnFailure -- sleep 10 
